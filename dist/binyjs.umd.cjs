(function(l,d){typeof exports=="object"&&typeof module<"u"?module.exports=d():typeof define=="function"&&define.amd?define(d):(l=typeof globalThis<"u"?globalThis:l||self,l.binyJS=d())})(this,function(){"use strict";const l=e=>Object.assign(Object.create(d),e),d={get resp(){return this._resp},set resp(e){this._resp=e,Array.isArray(e)||(this.renderAction="assign",this._resp=[e]),this._resp&&this._target&&h({target:this._target,renderAction:this.renderAction,response:this._resp,key:this.key}),this._resp=""},get key(){return this._key},set key(e){this._key=e},get deps(){return this._deps},set deps(e){this._deps=e},get target(){return this._target},set target(e){this._target=e},get action(){return this._action},set action(e){this._action=e},get val(){return this._val},set val(e){const t=this,n=t.key;if(Array.isArray(e)&&(!t.oldVal&&(t.oldVal=new Map),t.target)){const{diff:f,action:a,curM:i,swap:o}=_({v:e,curM:new Map([...t.oldVal]),key:n});t.swap=o,t.oldVal=i,t._val=f,t.renderAction=a}if(t.renderAction==="clear")return h({target:t.target,renderAction:t.renderAction});t._val&&(["remove","swap"].includes(t.renderAction)?h({target:t.target,renderAction:t.renderAction,key:t.key,swap:t.swap}):t.target&&t.target.dispatchEvent(new Event("change"))),!Array.isArray(e)&&(t.oldVal=e),t._val=e}},u={get actions(){return this._actions},set actions(e){this._actions=e}},A=e=>u.actions=e;function y(e){for(let t of[...e.querySelectorAll("[data-change]")])t.onchange=u.actions[t.dataset.change]}window.addEventListener("load",()=>y(app));function w(e,t){const n=e.tagName;return n==="TBODY"?new DOMParser().parseFromString(`<table><tbody>${t}</tbody></table>`,"text/html").querySelector("tbody").childNodes:new DOMParser().parseFromString(`<${n}>${t}</${n}>`,"text/html").querySelector(n).childNodes}function h({target:e,response:t,renderAction:n,key:f,swap:a}){({assign:()=>e.innerHTML=t.join(""),append:()=>e.insertAdjacentHTML("beforeEnd",t.join("")),clear:()=>(e.innerHTML="",y(document)),remove:()=>e.parentElement.removeChild(e),swap:()=>{const[o,s]=a;e.insertBefore(e.children[o-1],e.children[s-1]),e.insertBefore(e.children[s-1],e.children[o-1])},update:function(){const o=[...w(e,t)],s=o[0].getAttribute("key");for(let c of o)e.childNodes[c.getAttribute("key")-s].replaceWith(c)}})[n]()}function _({v:e,curM:t,key:n}){if(e.length===0&&t.size>1)return{action:"clear",curM:new Map,diff:void 0,swap:void 0};{const f=t.size,a=new Map,i=new Map([...t]),o=[];for(let r of e)t.has(r)?i.delete(r):(t.set(r,r[n]),a.set(r,r[n]));if(i.size>0)for(let r of i.keys())t.delete(r);if(a.size==0){let r=[...t.entries()].sort(([p,g],[z,k])=>p[n]<z[n]&&-1);for(let[p,g]of[...e.entries()])g[n]!==r[p][1]&&(o.push(p+1),t.set(r[p][0],g[n]));r=[]}let s;i.size==1&&a.size==0?s="remove":o.length>0?s="swap":i.size==0&&f>0?s="append":i.size==0&&f==0?s="assign":i.size==a.size&&a.size<t.size?s="update":s="assign";let c;return i.size>0&&a.size==0?c=[...i.keys()]:c=[...a.keys()],{action:s,diff:c,curM:t,swap:o.sort()}}}return{state:l,Actions:A}});
